{"version":3,"sources":["components/ListGroup/ListGroup.jsx","components/Pagination-Paginate/Pagination.jsx","components/MovieTable/Like.jsx","components/MovieTable/TableHeader.jsx","components/MovieTable/TableBody.jsx","components/MovieTable/Table.jsx","components/MovieTable/MoviesTable.jsx","components/SearchBox/SearchBox.jsx","API/moviesGenre.js","API/moviesService.js","components/MoviesApp.js","components/Pagination-Paginate/paginate.js","components/Form/Input.jsx","components/Form/Select.jsx","components/MovieForm.jsx","components/Form/Form.jsx","components/NotFound.jsx","components/App.js","index.js"],"names":["ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","className","map","item","key","onClick","defaultProps","Pagination","props","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","page","Like","classes","liked","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","get","createKey","_id","data","Table","MoviesTable","movie","to","title","onLike","onDelete","movies","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","genres","getGenres","filter","g","genre","numberInStock","dailyRentalRate","publishDate","MoviesApp","state","searchQuery","selectedGenre","handleDelete","movieToDelete","allMovies","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","handleSearch","query","handleSort","getPagedData","filtered","m","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","count","marginBottom","Input","error","rest","htmlFor","id","Select","options","option","MovieForm","genreId","errors","schema","Joi","string","required","number","min","max","doSubmit","movieInDb","find","genresAPI","Date","now","toString","push","saveMovie","history","match","params","onSubmit","handleSubmit","renderInput","renderSelect","renderButton","validate","abortEarly","details","message","validateProperty","obj","preventDefault","console","log","handleChange","input","errorMessage","disabled","NotFound","App","component","from","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.640c8dab.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ListGroup = ({ items, textProperty, valueProperty, onItemSelect, selectedItem}) => {\r\n    return (\r\n        <ul className=\"list-group clickable\">\r\n           { items.map( item => (\r\n            <li \r\n                key={item[valueProperty]} \r\n                onClick={()=>onItemSelect(item)}\r\n                className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\r\n            >\r\n            {item[textProperty]}</li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    textProperty: \"name\",\r\n    valueProperty: \"_id\"\r\n};\r\n \r\nexport default ListGroup;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pagination = props => {\r\n    const { itemsCount, pageSize, onPageChange, currentPage } = props;\r\n    \r\n    const pagesCount = Math.ceil(itemsCount / pageSize); // converting into an integer \r\n    if(pagesCount === 1) return null;\r\n    const pages = _.range(1, pagesCount + 1); // pagesCount + 1 to return the last page\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n            {pages.map(page =>( \r\n                <li key={page} className={page === currentPage ? 'page-item active' : 'page-item'}>\r\n                    <a className=\"page-link\" onClick={() => onPageChange(page)}>{page}</a>\r\n                </li>\r\n            ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired, \r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage:PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired   \r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nconst Like = ({onClick, liked}) => {\r\n    let classes = \"fa fa-heart\";\r\n    if(!liked)\r\n        classes += \"-o\";\r\n    return <i onClick={onClick} style={{cursor: \"pointer\"}} className={classes} aria-hidden=\"true\"></i>;\r\n}\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path => { // the logic for determing the sort order\r\n        const sortColumn = {...this.props.sortColumn};\r\n        if(sortColumn.path === path){\r\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\r\n        }\r\n        else{\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n        this.props.onSort(sortColumn);\r\n    }\r\n\r\n    renderSortIcon = column =>{\r\n        const { sortColumn } = this.props\r\n        if(column.path !== sortColumn.path)\r\n            return null;\r\n        if(sortColumn.order === 'asc')  \r\n            return <i className=\"fa fa-sort-asc\"></i>;\r\n        return <i className=\"fa fa-sort-desc\"></i>;\r\n    }\r\n    render() { \r\n        return (  \r\n        <thead>\r\n            <tr>\r\n                {this.props.columns.map(column => (\r\n                    <th \r\n                        className=\"clickable\"\r\n                        key={column.path || column.key} \r\n                        onClick={() => this.raiseSort(column.path)}\r\n                    >\r\n                      {column.label} {this.renderSortIcon(column)}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead> );\r\n    }\r\n}\r\n \r\nexport default TableHeader;\r\n\r\n/* columns: array\r\n   sortColumn: object\r\n   onSort: function*/","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item, column) => {\r\n        if(column.content){\r\n            return column.content(item);\r\n        }\r\n        //otherwise\r\n        return _.get(item, column.path);\r\n    }\r\n\r\n    createKey = (item, column) => {\r\n       return item._id + (column.path || column.key )\r\n    }\r\n\r\n    render() { \r\n        const { data, columns } = this.props; \r\n        return ( \r\n        <tbody>\r\n            {data.map(item => ( \r\n            <tr key={item._id}> \r\n                {columns.map(column => (\r\n                <td key={this.createKey(item, column)}>\r\n                    {this.renderCell(item, column)}\r\n                </td>\r\n                ))} \r\n            </tr>\r\n        ))}\r\n        </tbody> );\r\n    }\r\n}\r\n \r\nexport default TableBody;\r\n\r\n/*\r\n_get (passing the object, the target property)\r\n*/","import React from 'react';\r\nimport TableHeader from './TableHeader';\r\nimport TableBody from './TableBody';\r\n\r\nconst Table = ({ onSort, sortColumn, data, columns }) => {\r\n    //const { movies, onSort, sortColumn, data, columns } = this.props\r\n    return ( \r\n        <table className=\"table\">\r\n            <TableHeader \r\n                columns={columns} \r\n                sortColumn={sortColumn} \r\n                onSort={onSort}\r\n            />\r\n            <TableBody \r\n                columns={columns} \r\n                data={data}\r\n            />\r\n        </table>\r\n     );\r\n}\r\n \r\nexport default Table;","import React, { Component } from 'react';\r\nimport Like from './Like';\r\nimport Table from './Table';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MoviesTable extends Component{\r\n  columns = [  // properties\r\n    { \r\n      path: 'title', \r\n      label: 'Title',\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: 'genre.name', label: 'Genre' },\r\n    { path: 'numberInStock', label: 'Stock' },\r\n    { path: 'dailyRentalRate', label: 'Rate'},\r\n    {\r\n      key: 'like', \r\n      content: movie => <Like  liked={movie.liked} onClick={() => this.props.onLike(movie)}/> //function that return a react element\r\n    },\r\n\r\n    {\r\n      key: 'delete',\r\n      content: movie => <button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button> \r\n    },\r\n  ];\r\n    render(){\r\n    const { movies, onSort, sortColumn } = this.props\r\n    return (  \r\n        <Table \r\n            columns={this.columns} \r\n            data={movies} \r\n            sortColumn={sortColumn} \r\n            onSort={onSort}\r\n        />\r\n        );\r\n    }\r\n}\r\n \r\nexport default MoviesTable;","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange}) => {\r\n    return ( \r\n        <input \r\n            type=\"text\"\r\n            name=\"query\"\r\n            className=\"form control my-3\"\r\n            placeholder=\"Search...\"\r\n            value={value}\r\n            onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n     );\r\n}\r\n \r\nexport default SearchBox;\r\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./moviesGenre\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\"\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ListGroup from './ListGroup/ListGroup';\nimport Pagination from './Pagination-Paginate/Pagination';\nimport MoviesTable from './MovieTable/MoviesTable';\nimport SearchBox from './SearchBox/SearchBox';\nimport { getMovies } from '../API/moviesService';\nimport { getGenres } from '../API/moviesGenre';\nimport { paginate } from './Pagination-Paginate/paginate';\nimport _ from 'lodash';\n\nclass MoviesApp extends Component{\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 3,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: 'title', order: 'asc'}\n  }\n\n  componentDidMount(){\n    const genres = [{ _id: '', name: 'All Genres'},...getGenres()]\n    this.setState({ movies: getMovies(), genres: genres })\n  }\n\n  handleDelete = (movieToDelete) => {\n    const movies = this.state.movies.filter(allMovies => allMovies._id !== movieToDelete._id);\n    this.setState({ movies });\n  }\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies]; //clone  ... // getting a copy and then set a new state\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] }; // cloning the object a put it into the array\n    movies[index].liked = !movies[index].liked;  // starting with an empty heart\n    this.setState({ movies });\n  }\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  }\n\n  handleGenreSelect = genre => {\n    this.setState( { selectedGenre: genre, searchQuery: \"\", currentPage: 1 })\n  }\n\n  handleSearch = query =>{\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 })\n  }\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  }\n\n  getPagedData = () => {\n      const {currentPage, pageSize, selectedGenre, sortColumn, searchQuery, movies: allMovies} = this.state;\n\n      let filtered = allMovies;\n      if(searchQuery)\n        filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));\n    \n    // 1) filter, sort and las paginate\n    else if( selectedGenre && selectedGenre._id) // if two are both truthy, so do as below\n      filtered = allMovies.filter( m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]); \n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render(){\n    const { length: count } = this.state.movies;\n    \n    const { pageSize, currentPage, sortColumn, searchQuery} = this.state;\n\n    if(count === 0) return <p>There are no Movies!</p>\n\n    const { totalCount, data: movies } = this.getPagedData(); // all the methods for applying filtering, sorting and pagination is encapsulated in this method.\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3 ml-2\">\n          <ListGroup \n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n\n        <div className=\"col\">\n            <Link\n              to=\"/movies/new\"\n              className=\"btn btn-primary\"\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n\n          <p>Showing {count} movies in the database</p>\n          <h2>Movies</h2>\n          <SearchBox value={searchQuery} onChange={this.handleSearch}/>\n          <MoviesTable \n            movies={movies} \n            sortColumn={sortColumn}\n            onLike={this.handleLike} \n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination \n            itemsCount={totalCount} \n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default MoviesApp;","import _ from 'lodash';\r\n\r\nexport function paginate (items, pageNumber, pageSize){\r\n    const startIndex = (pageNumber - 1) * pageSize; //calcutating the starting index of the items of this page\r\n //  taking all the items starting from \"startIndex\" and convert the lodash wrapper to a regular array (using the chain value)\r\n    return _(items)\r\n        .slice(startIndex)\r\n        .take(pageSize)\r\n        .value();\r\n}","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input {...rest} name={name} id={name} className=\"form-control\"/>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            {/* if the error is truthy so display this technique otherwise ignore*/}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Input;\r\n\r\n\r\n/*\r\nBEFORE\r\n\r\nconst Input = ({name, label, value, onChange, error, type}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                value={value}\r\n                onChange={onChange} \r\n                type={type} \r\n                id={name} \r\n                name={name}\r\n                className=\"form-control\"\r\n            />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        {/* if the error is truthy so display this technique otherwise ignore\r\n        </div>\r\n     );\r\n}\r\n*/","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n    return ( \r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"\"/>\r\n                {options.map(option => (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Select;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from \"./Form/Form\";\r\nimport { getMovie, saveMovie } from '../API/moviesService'; \r\nimport { getGenres } from '../API/moviesGenre'; \r\n\r\nclass MovieForm extends Form{\r\n    state = { \r\n        data: {\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\"\r\n        },\r\n        genres: [],\r\n        errors: {}\r\n     };\r\n\r\n    schema = {\r\n       _id: Joi.string(),\r\n       title: Joi.string().required().label('Title'),\r\n       genreId: Joi.string().required().label('Genre'),\r\n       numberInStock: Joi.number().required().min(0).max(100).label('Number in Stock'),\r\n       dailyRentalRate: Joi.number().required().min(0).max(10).label('Daoly Rental Rate')\r\n   };\r\n\r\n   componentDidMount(){\r\n       const genres = getGenres();\r\n       this.setState({ genres });\r\n\r\n       const movieId = this.props.match.params.id; //reading the id in the route\r\n       if(movieId === \"new\");\r\n       return;\r\n\r\n       const movie = getMovie(movieId); // if it's not new, we get the movie with the givenID\r\n       if(!movie) //checking for it existance\r\n        return this.props.history.replace(\"/not-found\");\r\n\r\n       this.setState({ data: this.mapToViewModel(movie) }); \r\n   }\r\n\r\n   mapToViewModel(movie) {// this method gets a movie object that we get from the server, and maps it to a different kind of movie that we can use in this form\r\n    return{\r\n        _id: movie._id,\r\n        title: movie.title,\r\n        genreId: movie.genre._id,\r\n        numberInStock: movie.numberInStock,\r\n        dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n   }\r\n\r\n    doSubmit = () => {\r\n        saveMovie(this.state.data);\r\n\r\n        this.props.history.push(\"/movies\");\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"title\", \"Title\")}\r\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MovieForm;\r\n\r\n/*import React, { Component } from 'react';\r\nimport { saveMovie } from './../services/fakeMovieService';\r\n\r\nconst MovieForm = ({ match, history }) => {\r\nreturn (\r\n    <div>\r\n        <h1>Movie Form{match.params.id}</h1>\r\n        <button className=\"btn btn-primary\" onClick={()=>history.push('/movies')}>Save</button>\r\n    </div>\r\n)\r\n}\r\n \r\nexport default MovieForm;*/","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './Input';\r\nimport Select from './Select';\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        data: {},\r\n        errors: {}\r\n     }\r\n\r\n     validate = () => { // validation function. It validates the entire form\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.data, this.schema, options); //1) the object we want to validate    2) the schema\r\n     \r\n        if(!error) \r\n            return null;\r\n\r\n        // mapping this array into an obect\r\n        const errors = {};\r\n        for(let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateProperty = ({ name, value }) => {  // validation function. It validates only one input/property\r\n       const obj = {[name]: value };  //computed properties \r\n       const schema = { [name]: this.schema[name] }; // this.schema of name\r\n       const { error } = Joi.validate(obj, schema);\r\n       return error ? error.details[0].message : null;\r\n    }\r\n\r\n    // every time the user clicks the submit button we want to validate the data, if there's any error we want to return\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} }) // if there's an error display it, otherwise keeps the object empty\r\n        if(errors) \r\n            return;\r\n\r\n        this.doSubmit();\r\n    }\r\n\r\n    doSubmit = () => {\r\n         // call the server\r\n        console.log(\"Submitted\")\r\n    }\r\n\r\n    // every time the user types something in an input field, we want to validate that input field and update the state\r\n    handleChange = ({ currentTarget: input }) =>{\r\n        const errors = {...this.state.errors};\r\n        const errorMessage = this.validateProperty(input);\r\n        const data = {...this.state.data};\r\n        if(errorMessage) // if the error message is truthy, we're going to store it into the errors object\r\n            errors[input.name] = errorMessage;\r\n        \r\n        else // delete the existing property\r\n            delete errors[input.name];\r\n\r\n        data[input.name] = input.value;  //data.username = e.currentTarget.values;\r\n        this.setState({ data, errors })\r\n    }\r\n\r\n    renderButton(label){\r\n        return (\r\n        <button className=\"btn btn-primary\" disabled={this.validate()} /* disable the button when the button is not valid */ >\r\n            {label}\r\n        </button>\r\n        )\r\n    }\r\n\r\n    renderInput(name, label, type=\"text\"){\r\n        const { data, errors } = this.state;\r\n        return(\r\n            <Input\r\n                type={type}\r\n                name={name}\r\n                value={data[name]}  //data.username\r\n                label={label}\r\n                onChange={this.handleChange} \r\n                error={errors[name]}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderSelect(name, label, options){\r\n        const { data, errors } = this.state;\r\n        return(\r\n            <Select\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                options={options}\r\n                onChange={this.handleChange} \r\n                error={errors[name]}\r\n            />\r\n        )\r\n    }\r\n}\r\n \r\nexport default Form;","import React from \"react\";\n\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport MoviesApp from './MoviesApp';\r\nimport MovieForm from './MovieForm';\r\nimport NotFound from \"./NotFound\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <main className=\"container\">\r\n          <Switch>\r\n            <Route path=\"/movies/:id\" component={MovieForm} />\r\n            <Route path=\"/movies\" component={MoviesApp} />\r\n            <Route path=\"/not-found\" component={NotFound}/>\r\n            <Redirect from=\"/\" exact to=\"/movies\"/>\r\n            <Redirect to=\"/not-found\"/>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(<BrowserRouter>\n                    <App />\n                </BrowserRouter>, document.getElementById('root'));\n\n"],"sourceRoot":""}